/*
PRACTICA #4

Una cadena de video-clubs ha decidido tener un istema informatizado 
para administrar la red las rentas a sus peliculas para sus clientes.

Cada pelicula se caracteriza por un numero identificador, un titulo, 
la productora que permitio su realizacion, la fecha en la que fue estrenada la pelicula
asi como su nacionalidad.

De los directores de las peliculas nos interesa saber su nombre, sexo, nacionalidad.

En cuanto a los actores que participan en las peliculas nos interesa saber su nombre, 
sexo y nacionalidad. Tambien nos interesa saber que en las peliculas hay actores principales
y actores que no lo son.

y los clientes nos interesa conocer su numero de cliente, datos generales, domicilio, telefono 
de contacto y correo electronico.

Los clientes rentan ejemplares de peliculas y de cada ejemplar se quiere saber su numero 
de identificador ademas de su estado de conservacion.

Cada cliente no puede tener al mismo tiempo rentadas mas de cuatro peliculas.
para poder ser cliente de la cadena de video se requiere cada cliente sea avalado por otro cliente.
*/

create database ejemplo_04;

use ejemplo_04;

create table nacionalidad(
nacionalidadid int primary key,
descripcion varchar(50)
);

create table director(
directorid int primary key,
nombre varchar(50),
sexo char,
nacionalidadid int,
foreign key (nacionalidadid) references nacionalidad (nacionalidadid)
);


create table actor(
actorid int primary key,
nombre varchar(50),
sexo char,
nacionalidadid int,
foreign key (nacionalidadid) references nacionalidad (nacionalidadid)
);

create table pelicula(
peliculaid int primary key,
titulo varchar(35),
productora varchar(35),
fecharealizacion date,
nacionalidadid int,
foreign key (nacionalidadid) references nacionalidad (nacionalidadid)
);

create table direccion (
directorid int,
foreign key (directorid) references director (directorid),
peliculaid int,
foreign key (peliculaid) references pelicula (peliculaid)
);

create table reparto(
actorid int,
foreign key (actorid) references actor (actorid),
peliculaid int,
foreign key (peliculaid) references pelicula (peliculaid),
principal char
);

create table ejemplar(
ejemplarid int primary key,
peliculaid int,
foreign key (peliculaid) references pelicula (peliculaid),
estadoconservacion varchar(35)
);

create table generales(
generalesid int primary key,
nombre varchar(25),
apellidopaterno varchar(25),
apellidomaterno varchar(25),
curp varchar(25)
);

create table domicilio(
domicilioid int primary key,
calle varchar(25),
numero int,
colonia varchar(35),
codigopostal int,
municipio varchar(25),
entidad varchar(25)
);

create table contacto(
contactoid int primary key,
telefonocasa varchar(25),
telefonocelular varchar(25),
correoelectronico varchar(50)
);

create table cliente(
dni int primary key,
generalesid int,
foreign key (generalesid) references generales (generalesid),
domicilioid int,
foreign key (domicilioid) references domicilio (domicilioid),
contactoid int,
foreign key (contactoid) references contacto (contactoid),
dna int,
foreign key (dna) references cliente (dni)
);

create table rentas(
dni int,
foreign key (dni) references cliente (dni),
ejemplarid int,
foreign key (ejemplarid) references ejemplar (ejemplarid),
fechaentrega date,
fechadevolucion date
);
